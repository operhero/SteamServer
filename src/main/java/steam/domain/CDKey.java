package steam.domain;

import java.io.Serializable;

public class CDKey implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cdkey.cdkey
     *
     * @mbggenerated
     */
    private String cdkey;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cdkey.product_id
     *
     * @mbggenerated
     */
    private Integer productId;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cdkey.state
     *
     * @mbggenerated
     */
    private Integer state;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cdkey.used_steam_id
     *
     * @mbggenerated
     */
    private String usedSteamId;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cdkey
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column cdkey.cdkey
     *
     * @return the value of cdkey.cdkey
     *
     * @mbggenerated
     */
    public String getCdkey() {
        return cdkey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column cdkey.cdkey
     *
     * @param cdkey the value for cdkey.cdkey
     *
     * @mbggenerated
     */
    public void setCdkey(String cdkey) {
        this.cdkey = cdkey == null ? null : cdkey.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column cdkey.product_id
     *
     * @return the value of cdkey.product_id
     *
     * @mbggenerated
     */
    public Integer getProductId() {
        return productId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column cdkey.product_id
     *
     * @param productId the value for cdkey.product_id
     *
     * @mbggenerated
     */
    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column cdkey.state
     *
     * @return the value of cdkey.state
     *
     * @mbggenerated
     */
    public Integer getState() {
        return state;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column cdkey.state
     *
     * @param state the value for cdkey.state
     *
     * @mbggenerated
     */
    public void setState(Integer state) {
        this.state = state;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column cdkey.used_steam_id
     *
     * @return the value of cdkey.used_steam_id
     *
     * @mbggenerated
     */
    public String getUsedSteamId() {
        return usedSteamId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column cdkey.used_steam_id
     *
     * @param usedSteamId the value for cdkey.used_steam_id
     *
     * @mbggenerated
     */
    public void setUsedSteamId(String usedSteamId) {
        this.usedSteamId = usedSteamId == null ? null : usedSteamId.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cdkey
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        CDKey other = (CDKey) that;
        return (this.getCdkey() == null ? other.getCdkey() == null : this.getCdkey().equals(other.getCdkey()))
            && (this.getProductId() == null ? other.getProductId() == null : this.getProductId().equals(other.getProductId()))
            && (this.getState() == null ? other.getState() == null : this.getState().equals(other.getState()))
            && (this.getUsedSteamId() == null ? other.getUsedSteamId() == null : this.getUsedSteamId().equals(other.getUsedSteamId()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cdkey
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getCdkey() == null) ? 0 : getCdkey().hashCode());
        result = prime * result + ((getProductId() == null) ? 0 : getProductId().hashCode());
        result = prime * result + ((getState() == null) ? 0 : getState().hashCode());
        result = prime * result + ((getUsedSteamId() == null) ? 0 : getUsedSteamId().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cdkey
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", cdkey=").append(cdkey);
        sb.append(", productId=").append(productId);
        sb.append(", state=").append(state);
        sb.append(", usedSteamId=").append(usedSteamId);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }
}